// Default variables

//Common
$fluid: false !default;

// Standard button mixin
@mixin button-variant($background, $fluid) {
  // Computed default variables
  $button-text-color: color-yiq($background) !default;
  $button-focus-background: $background !default;
  $button-focus-text-color: $button-text-color !default;

  // Set all properties
  color: $button-text-color;

  @if $fluid {
    width: 100%;
    padding: $button-padding-y 0;
  }

  @else {
    padding: $button-padding-y $button-padding-x;
  }

  font-family: $button-font-family;
  font-weight: $button-font-weight;
  font-style: $button-font-style;
  letter-spacing: $button-letter-spacing;
  text-transform: $button-text-transform;
  text-align: center;
  background-color: $background;
  border-radius: $button-border-radius;
  transition: all $button-transition-time ease-in-out;
  box-shadow: $button-box-shadow;
  border: 1px solid $background;

  &:hover {
    color: $background;
    background-color: $button-text-color;
    border: 1px solid $background;
  }

  &:focus,
  &.focus,
  &.active {
    color: $button-focus-text-color;
    background-color: $button-focus-background;
  }

  // Disabled comes first so active can properly restyle
  &.disabled,
  &:disabled {
    color: $button-disabled-text-color;
    background-color: $button-disabled-background-color;
    border: 1px solid $button-disabled-background-color;
  }
}

//Outline button mixin
@mixin button-outline-variant($color, $fluid) {
  // Computed default variables
  $button-outline-text-color: $color !default;
  $button-outline-focus-background: $color !default;
  $button-outline-focus-text-color: color-yiq($color) !default;

  // Set all properties
  color: $button-outline-text-color;

  @if $fluid {
    width: 100%;
    padding: $button-outline-padding-y 0;
  }

  @else {
    padding: $button-padding-y $button-padding-x;
  }

  font-family: $button-outline-font-family;
  font-weight: $button-outline-font-weight;
  font-style: $button-outline-font-style;
  background-color: transparent;
  letter-spacing: $button-outline-letter-spacing;
  border-radius: $button-outline-border-radius;
  text-transform: $button-outline-text-transform;
  transition: all $button-outline-transition-time ease-in-out;
  text-align: center;
  border: $button-outline-border-width solid $color;

  &:hover {
    color: color-yiq($color);
    background-color: $color;
    border: $button-outline-border-width solid $color;
  }

  &:focus,
  &.focus,
  &.active {
    color: $button-outline-focus-text-color;
    background-color: $button-outline-focus-background;
  }

  // Disabled comes first so active can properly restyle
  &.disabled,
  &:disabled {
    color: $button-outline-disabled-text-color;
    background-color: $button-outline-disabled-background-color;
    border: $button-outline-border-width solid $button-outline-disabled-background-color;
  }
}

@each $color, $value in $theme-colors {
  .button-#{$color} {
    @include button-variant($value, $fluid);
  }

  .button-#{$color}-fluid {
    @include button-variant($value, $fluid: true);
  }

  .button-outline-#{$color} {
    @include button-outline-variant($value, $fluid);
  }

  .button-outline-#{$color}-fluid {
    @include button-outline-variant($value, $fluid: true);
  }
}
