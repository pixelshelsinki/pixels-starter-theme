@function strip-unit($value) {
  @return $value / ($value * 0 + 1);
}

// NOTE: Mixin parameters should be provided using same units as $breakpoint-min and $breakpoint-max. For example, if there breakpoints are set in rems then mixin should receive values in rems.

@mixin fluid-type($min-font-size, $max-font-size, $min-margin-bottom: 0, $max-margin-bottom: 0, $min-vw: $breakpoint-min, $max-vw: $breakpoint-max) {
  $u1: unit($min-vw);
  $u2: unit($max-vw);
  $u3: unit($min-font-size);
  $u4: unit($max-font-size);
  $u5: unit($min-margin-bottom);
  $u6: unit($max-margin-bottom);

  @if $u1 == $u2 and $u1 == $u3 and $u1 == $u4 and $u1 == $u5 and $u1 == $u6 {
    & {
      font-size: $min-font-size !important;
      margin-bottom: $min-margin-bottom !important;

      @media (min-width: $min-vw) {
        font-size: calc(#{$min-font-size} + #{strip-unit($max-font-size - $min-font-size)} * ((100vw - #{$min-vw}) / #{strip-unit($max-vw - $min-vw)})) !important;
        margin-bottom: calc(#{$min-margin-bottom} + #{strip-unit($max-margin-bottom - $min-margin-bottom)} * ((100vw - #{$min-vw}) / #{strip-unit($max-vw - $min-vw)})) !important;
      }

      @media (min-width: $max-vw) {
        font-size: $max-font-size !important;
        margin-bottom: $max-margin-bottom !important;
      }
    }
  }
}
